---
- name: create a VPC with shared tenancy
  ec2_vpc_net:
    region: "{{ region }}"
    name: RancherVPC
    cidr_block: "{{ cidr_block }}"
    dns_hostnames: yes
    dns_support: yes
    tenancy: default
    tags:
      Ambiente: "{{ Ambiente }}"
      Projeto: "{{ Projeto }}"
    state: present
  register: vpc

- name: Associating an IGW to VPC
  ec2_vpc_igw:
    region: "{{ region }}"
    vpc_id: "{{ vpc.vpc.id }}"
    tags:
      Name: RancherIGW
      Ambiente: "{{ Ambiente }}"
      Projeto: "{{ Projeto }}"
    state: present
  register: igw

- name: Creating Publics and Privates Subnets
  ec2_vpc_subnet:
    region: "{{ region }}"
    assign_instances_ipv6: no
    az: "{{ item.az }}"  
    cidr: "{{ item.cidr }}"
    map_public: "{{ item.map_public }}"
    vpc_id: "{{ vpc.vpc.id }}"
    resource_tags:
      Name: "{{ item.name }}"
      Ambiente: "{{ Ambiente }}"
      Projeto: "{{ Projeto }}"
    state: present
  loop:
    - { name: PUBLIC A, az: "{{ region }}a" , cidr: "{{ cidr_public_a }}", map_public: yes}
    - { name: PUBLIC B, az: "{{ region }}b" , cidr: "{{ cidr_public_b }}", map_public: yes}
    - { name: PRIVATE A, az: "{{ region }}a" , cidr: "{{ cidr_private_a }}", map_public: no}
    - { name: PRIVATE B, az: "{{ region }}b" , cidr: "{{ cidr_private_b }}", map_public: no}
  register: subnets

- name: Set up public subnet route table
  ec2_vpc_route_table:
    region: "{{ region }}"
    vpc_id: "{{ vpc.vpc.id }}"
    tags:
      Name: rtb-public
      Ambiente: "{{ Ambiente }}"
      Projeto: "{{ Projeto }}"
    subnets:
      - "PUBLIC A"
      - "PUBLIC B"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
  register: public_rtb

- name: Get public subnet facts
  ec2_vpc_subnet_facts:
    region: "{{ region }}"
    filters:
      vpc-id: "{{ vpc.vpc.id }}"
      "tag:Name": "{{ item }}"
  loop:
    - "PUBLIC A"
    - "PUBLIC B"
  register: public_subnet_facts

- name: Create nat gateway on public subnets
  ec2_vpc_nat_gateway:
    region: "{{ region }}"
    subnet_id: "{{ item.subnets | map(attribute='subnet_id') | list | first }}"
    if_exist_do_not_create: yes
    state: present
  register: nat
  loop: "{{ public_subnet_facts.results }}"

- name: Get private subnet facts
  ec2_vpc_subnet_facts:
    region: "{{ region }}"
    filters:
      vpc-id: "{{ vpc.vpc.id }}"
      "tag:Name": "{{ item }}"
  loop:
    - "PRIVATE A"
    - "PRIVATE B"
  register: private_subnet_facts

- name: Set up private subnet route table
  ec2_vpc_route_table:
    region: "{{ region }}"
    vpc_id: "{{ vpc.vpc.id }}"
    tags:
      Name: "{{ item.name }}"
      Ambiente: "{{ Ambiente }}"
      Projeto: "{{ Projeto }}"
    subnets:
      - "{{ item.subnet }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ item.nat }}"
  register: public_rtb
  loop:
    - { name: "rtb-privateA", subnet: "{{ private_subnet_facts.results[0].subnets | map(attribute='subnet_id') | list | first }}", nat: "{{ nat.results[0].nat_gateway_id  }}" }
    - { name: "rtb-privateB", subnet: "{{ private_subnet_facts.results[1].subnets | map(attribute='subnet_id') | list | first }}", nat: "{{ nat.results[1].nat_gateway_id  }}" }
